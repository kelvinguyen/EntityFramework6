domain
entity
data

----
status code
200 - ok
201 - created
204 - No Content
400 - bad request
401 - Unauthorize
403 - Forbidden
404 - Not found
409 - conflict
500 - internal server error



-----------------------
Header
Content-Type : application/json


-------------------
fluent validation
https://github.com/JeremySkinner/FluentValidation

------------------
Partially Update -
	- Json Patch(RFC 6902) : Describe a document structure for expressing a sequence of operations to apply to a json document
	- https://tools.ietf.org/html/rfc6902
	- operation example
	[
	 { "op": "test", "path": "/a/b/c", "value": "foo" },
	 { "op": "remove", "path": "/a/b/c" },
	 { "op": "add", "path": "/a/b/c", "value": [ "foo", "bar" ] },
	 { "op": "replace", "path": "/a/b/c", "value": 42 },
	 { "op": "move", "from": "/a/b/c", "path": "/a/b/d" },
	 { "op": "copy", "from": "/a/b/d", "path": "/a/b/e" }
   ]

	- example patch body:
	[
		{
			"op":"replace",
			"path":"/name",
			"value":"Update - Lousiana"
		},
		{
			"op":"replace",
			"path":"/description",
			"value":"Update - my update description"
		}
	]

----------------------------------------------------------------
Logging Provider

- https://github.com/aspnet/Logging
- NLog : third party
	+ http://nlog-project.org/

-----------------------------------------------------------
Add Service to container in StartUp.cs
- AddTransient : add service each time request (best : light weight stateless services)
- AddScoped : create one per request
- AddSingleton : first time request and use same instance


--------------------------------------------------------
Configuration File
1> add json file : appsetting.json
2> add to configureService : + static IConfigurationRoot
							 + constructor : ConfigurationBuilder
							 + package : Microsoft.Extensions.Configuration.FileExtensions , 
										 Microsoft.Extensions.Configuration.Json
							 + Build the ConfigurationBuilder and set it to IConfigurationRoot


---------------------------------------------------------
Entity Framework Core
- Annotation 
	+ primary key : [Key]
	+ AutoGenerate Primary Key : [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
	+ Avoid Null : [Required]
	+ foreign Key : [ForeignKey("cityId")]

- Package
	+ Microsoft.EntityFrameworkCore.SqlServer  : this is for EF
	+ Microsoft.EntityFrameworkCore.Tools :  add the command reconnect , exucute for migration
		- project.json/tools package: "Microsoft.EntityFrameworkCore.Tools": "1.0.0-preview2-final"

- DbContext 
	+ 1 way :override OnConfiguring() 
	+ 2 way : using constructor

- StartUp
	+ ConfigureServices : - services.AddDbContext<>();

- ConnectionString
	"Server=(localdb)\\MSSQLLocalDB;Database=_CHANGE_ME;Trusted_Connection=True;MultipleActiveResultSets=true"
		+ Server=(localdb)\\MSSQLLocalDB : in memory database
		+ Database= CityInfoDB : DataBase Name
		+ Trusted_Connection=True : this connect is trusted wit window authentication

- Migration Command
	+ Install-Package FullPackageName (add package to project.json)
	+ enable-migrations
	+ Add-Migration CityInfoDBInitialMigration 
	+ Update-Database

-------------------------------------------------------------------------------------
Generic Note

where T: struct				|	The type argument must be a value type. 
								Any value type except Nullable can be specified. See Using Nullable Types for more information.

where T : class				|	The type argument must be a reference type; this applies also to any class, interface, delegate, or array type.

where T : new()				|	The type argument must have a public parameterless constructor. 
								When used together with other constraints, the new() constraint must be specified last.

where T : <base class name>	|	The type argument must be or derive from the specified base class.

where T : <interface name>	|	The type argument must be or implement the specified interface. Multiple interface constraints can be specified. 
								The constraining interface can also be generic.

where T : U					|	The type argument supplied for T must be or derive from the argument supplied for U.
